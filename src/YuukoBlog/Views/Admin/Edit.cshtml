@{
    ViewBag.Title = "Admin Panel";
}

    <div class="blog-post" id="admin-post">
        <div class="form-group">
            <label>Title</label>
            <input type="text" class="form-control" v-model="post.title" />
        </div>
        <div class="form-group">
            <label>URL</label>
            <input type="text" class="form-control" v-model="post.url" />
        </div>
        <div class="form-group">
            <label>Content</label>
            <textarea class="markdown-textbox"></textarea>
        </div>
        <div class="form-group">
            <label>Tags</label>
            <input type="text" class="form-control" v-model="post.tagsText" />
        </div>
        <div class="form-group">
            <label>Catalog</label>
            <select class="form-control" v-model="post.catalogId">
                <option :value="null">Uncatalogged</option>
                @foreach (CatalogViewModel catalog in ViewBag.Catalogs)
                {
                    <option value="@catalog.Id">@catalog.Title</option>
                }
            </select>
        </div>
        <div class="form-group">
            <label>Is Page?</label>
            <div>
                <div class="checkbox">
                    <input type="checkbox" v-model="post.isPage" />
                </div>
            </div>
        </div>
        <div class="form-group">
            <label>Is Pinned?</label>
            <div>
                <div class="checkbox">
                    <input type="checkbox" v-model="post.isPinned" />
                </div>
            </div>
        </div>
        <div class="form-group">
            <input type="button" v-on:click="update" class="btn btn-primary" value="Save" />
        </div>
    </div>

<script src="~/scripts/vue.js"></script>
<script src="~/scripts/simplemde.js"></script>
<script>
    var app = new Vue({
        el: '#admin-post',
        data: {
            id: '@ViewBag.PostId',
            post: {}
        },
        methods: {
            loadPost: function () {
                var self = this;
                var smde = jQuery('.markdown-textbox')[0].smde;
                jQuery.get('/admin/post/body', { id: self.id }, function (data) {
                    self.post = data;
                    jQuery('.markdown-textbox').unbind().each(function () {
                        var editor = jQuery(this);
                        if (editor[0].smde == undefined) {
                            var smde = new SimpleMDE({
                                element: editor[0],
                                spellChecker: false,
                                status: false
                            });
                            editor[0].smde = smde;
                            smde.value(self.post.content);
                            var begin_pos, end_pos;
                            /*
                            jQuery(this).parent().children().unbind().dragDropOrPaste(function () {
                                begin_pos = smde.codemirror.getCursor();
                                smde.codemirror.setSelection(begin_pos, begin_pos);
                                smde.codemirror.replaceSelection(replaceText);
                                begin_pos.line++;
                                end_pos = { line: begin_pos.line, ch: begin_pos.ch + replaceInnerText.length };
                            },
                                function (result) {
                                    smde.codemirror.setSelection(begin_pos, end_pos);
                                    smde.codemirror.replaceSelection('![' + result.FileName + '](/file/download/' + result.Id + ')');
                                });
                            */
                        }
                    });
                });
            },
            remove: function (id) {
                var self = this;
                if (confirm('Are you sure you want to delete this post?')) {
                    jQuery.post('/admin/post/delete', { id: id }, function () {
                        // TODO: Redirect
                    })
                }
            },
            reset: function () {
                this.loadPost();
            },
            update: function (catalog) {
                var self = this;
                this.post.content = jQuery('.markdown-textbox')[0].smde.value();
                jQuery.post('/admin/post/edit', this.post, function () {
                    window.location = '/post/' + self.post.url;
                });
            }
        },
        created: function () {
            this.loadPost();
        }
    });
</script>